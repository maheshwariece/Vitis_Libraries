.. index:: pair: namespace; rtm
.. _doxid-namespacexf_1_1hpc_1_1rtm:
.. _cid-xf::hpc::rtm:

namespace rtm
=============

.. toctree::
	:hidden:

	class_xf_hpc_rtm_Domain3D.rst
	class_xf_hpc_rtm_RTM2D.rst
	class_xf_hpc_rtm_RTM3D.rst
	class_xf_hpc_rtm_Stencil2D.rst
	class_xf_hpc_rtm_Stencil3D.rst



.. ref-code-block:: cpp
	:class: overview-code-block

	// classes

	template <
	    int t_MaxDimZ,
	    int t_MaxDimY,
	    int t_HalfOrder,
	    int t_PEZ,
	    int t_PEX,
	    int t_NumSM
	    >
	class :ref:`Domain3D<doxid-classxf_1_1hpc_1_1rtm_1_1_domain3_d>` 

	template <
	    typename t_DataType,
	    int t_Order,
	    int t_MaxDim = 1024,
	    int t_MaxB = 40,
	    int t_PE = t_Order / 2
	    >
	class :ref:`RTM2D<doxid-classxf_1_1hpc_1_1rtm_1_1_r_t_m2_d>` 

	template <
	    typename t_Domain,
	    typename t_DataType,
	    int t_Order,
	    int t_MaxDimZ = 128,
	    int t_MaxDimY = 128,
	    int t_MaxB = 40,
	    int t_PEZ = 1,
	    int t_PEX = 1
	    >
	class :ref:`RTM3D<doxid-classxf_1_1hpc_1_1rtm_1_1_r_t_m3_d>` 

	template <
	    typename t_DataType,
	    int t_Order,
	    int t_MaxDim = 1024,
	    int t_PE = 1
	    >
	class :ref:`Stencil2D<doxid-classxf_1_1hpc_1_1rtm_1_1_stencil2_d>` 

	template <
	    typename t_DataType,
	    int t_Order,
	    int t_MaxDimZ = 128,
	    int t_MaxDimY = 128,
	    int t_PEZ = 1,
	    int t_PEX = 1
	    >
	class :ref:`Stencil3D<doxid-classxf_1_1hpc_1_1rtm_1_1_stencil3_d>` 





.. FunctionSection

.. _doxid-namespacexf_1_1hpc_1_1rtm_1aebf3058c974dff9074ed364d252a48d6:
.. _cid-xf::hpc::rtm::memselstream:

memSelStream
------------


.. code-block:: cpp
	
	#include "rtm/dataMover.hpp"



.. ref-code-block:: cpp
	:class: title-code-block

	template <
	    typename t_InterfaceType,
	    typename t_DataType
	    >
	void memSelStream (
	    unsigned int p_n,
	    unsigned int p_k,
	    t_InterfaceType* p_mem0,
	    t_InterfaceType* p_mem1,
	    hls::stream <t_DataType>& p_str
	    )

memSelStream reads data alternatively from two memory addresses to a stream



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - t_InterfaceType

        - is the datatype in memory

    *
        - t_DataType

        - is the datatype in of the stream

    *
        - p_n

        - is the number of data to be read

    *
        - p_k

        - is the selection

    *
        - p_mem0

        - is the first memory port

    *
        - p_mem1

        - is the second memory port

    *
        - p_str

        - is the output stream

.. _doxid-namespacexf_1_1hpc_1_1rtm_1aadd8f66772cd45c9d425e5b2afbf5097:
.. _cid-xf::hpc::rtm::streamselmem:

streamSelMem
------------


.. code-block:: cpp
	
	#include "rtm/dataMover.hpp"



.. ref-code-block:: cpp
	:class: title-code-block

	template <
	    typename t_InterfaceType,
	    typename t_DataType
	    >
	void streamSelMem (
	    unsigned int p_n,
	    unsigned int p_k,
	    t_InterfaceType* p_mem0,
	    t_InterfaceType* p_mem1,
	    hls::stream <t_DataType>& p_str
	    )

streamSelMem reads write alternatively to two memory addresses from a stream



.. rubric:: Parameters:

.. list-table::
    :widths: 20 80

    *
        - t_InterfaceType

        - is the datatype in memory

    *
        - t_DataType

        - is the datatype in of the stream

    *
        - p_n

        - is the number of data to be read

    *
        - p_k

        - is the selection

    *
        - p_mem0

        - is the first memory port

    *
        - p_mem1

        - is the second memory port

    *
        - p_str

        - is the input stream

